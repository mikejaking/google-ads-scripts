// 1. Go to this spreadsheet -> https://docs.google.com/spreadsheets/d/1URcVq4dkh2wUoN5YplFWzJ-JAgKNeTltxZYRnOg5BAs/copy
// 2. Create a copy of the spreadsheet that uses the same email address as your Google Ads account
// 3. Replace the spreadsheet URL below with your url
const SPREADSHEET_URL =
  "https://docs.google.com/spreadsheets/d/1URcVq4dkh2wUoN5YplFWzJ-JAgKNeTltxZYRnOg5BAs/edit#gid=1772883530";

// Name of sheet to import data
const SHEET_NAME = "All Ads";

// Headers for each column
const HEADER_ROW = ["Ad Id", "Campaign", "Ad Group", "Ad type", "Labels", "Headline 1", "Headline 1 position",
    "Headline 2", "Headline 2 position", "Headline 3", "Headline 3 position", "Headline 4",
    "Headline 4 position", "Headline 5", "Headline 5 position", "Headline 6",
    "Headline 6 position", "Headline 7", "Headline 7 position", "Headline 8",
    "Headline 8 position", "Headline 9", "Headline 9 position", "Headline 10",
    "Headline 10 position", "Headline 11", "Headline 11 position", "Headline 12",
    "Headline 12 position", "Headline 13", "Headline 13 position", "Headline 14",
    "Headline 14 position", "Headline 15", "Headline 15 position", "Description 1",
    "Description 1 position", "Description 2", "Description 2 position", "Description 3",
    "Description 3 position", "Description 4", "Description 4 position", "Path 1", "Path 2",
    "Final URL", "Final mobile URL", "Tracking template", "AdStrengthInfo"
 ];

function main() {
  
  // Array to store all the ads
  // This array will be imported into the Google sheet
  const adsArray = [];
  adsArray.push(HEADER_ROW);
  
  // Returns an ad performance report with ad strength included
  // Iterates through the data and stores everything in an object
  const performanceReport = adPerformanceReport();
  const adsObject = buildPerformanceReportObject(performanceReport);
  
  // Get all ads in the account
  // Iterate through every ad that was returned
  // Add them to the adsArray ready for import into the spreadsheetsheet
  const adIterator = getAds();
  while (adIterator.hasNext()) {
    let ad = adIterator.next();
        
    // Array to store a row of data. Each row is one ad
    const adCopyArray = [];
    var adId = ad.getId();
    
    // Push ad element to the adCopyArray
    // This is creating one row of data for each ad
    adCopyArray.push(adId);
    adCopyArray.push(ad.getCampaign().getName());
    adCopyArray.push(ad.getAdGroup().getName());
    adCopyArray.push(ad.getType());
    adCopyArray.push(getLabels(ad));
      
    // Add each headline to the adCopyArray data row
    var headlineText = ad.getHeadlines();
    for (var i = 0; i < 15; i++) {
      adCopyArray.push(getText(headlineText[i]));
      adCopyArray.push(getPin(headlineText[i]));
    }
      
    // Add each description to the data row
    var descriptionText = ad.getDescriptions();
    for (var i = 0; i < 4; i++) {
      adCopyArray.push(getText(descriptionText[i]));
      adCopyArray.push(getPin(descriptionText[i]));
    }
      
    // Push ad element to the adCopyArray
    adCopyArray.push(ad.getPath1()
      .toLowerCase());
    adCopyArray.push(ad.getPath2()
      .toLowerCase());
    adCopyArray.push(ad.urls()
      .getFinalUrl());
    adCopyArray.push(ad.urls()
      .getMobileFinalUrl());
    adCopyArray.push(ad.urls()
      .getTrackingTemplate());
    adCopyArray.push(adsObject[adId].AdStrengthInfo);
    // adCopyArray.push("TEST");
    
    // Push adCopyArray to the adsArray of all the ads.
    adsArray.push(adCopyArray);
  }
  
  for (let i = 0; i < adsArray.length; i++) {
    console.log("# " + i + " AdID " + adsArray[i]);
  }
  
    // Returns a cleared sheet ready for data to be imported
  let sheet = getSpreadSheet();
  
  // Import adsArray into spreadsheet
  importAdsToSheet(sheet, adsArray);
}

// Returns an ad performance report
function adPerformanceReport() {
  const report = AdsApp.report(
    "SELECT CampaignName, AdGroupName, Id, AdStrengthInfo " +
    "FROM AD_PERFORMANCE_REPORT " +
    "WHERE AdType = RESPONSIVE_SEARCH_AD ")
  return report;
}

// Returns an object of all the ads
// 1. Iterates through the data in report
// 2. Then stores everything in an object
function buildPerformanceReportObject(report) {
  const adsIdObject = {};
  const rows = report.rows();
  while (rows.hasNext()) {
    let row = rows.next();
    const adIdObject = {};
    adIdObject["CampaignName"] = row["CampaignName"];
    adIdObject["AdGroupName"] = row["AdGroupName"];
    adIdObject["AdStrengthInfo"] = row["AdStrengthInfo"];
    adsIdObject[row["Id"]] = adIdObject;
  }
  return adsIdObject;
}

// Returns a cleared sheet ready for data to be imported
function getSpreadSheet() {
  const spreadsheet = SpreadsheetApp.openByUrl(SPREADSHEET_URL);
  const sheet = spreadsheet.getSheetByName(SHEET_NAME);
  sheet.clear();
  return sheet;
}

// Imports the adcopy data into a Google Spreadhseet
// - sheet is the destination object
// - adCopy is the data to import
function importAdsToSheet(sheet, adCopy) {
  sheet.getRange(1, 1, adCopy.length, adCopy[0].length)
    .setValues(adCopy);
}

// Returns all the Responsive Search Ads in the account
function getAds() {
  const adIterator = AdsApp.ads()
    .withCondition("Type IN [RESPONSIVE_SEARCH_AD]")
    .get();
  return adIterator;
}

// Returns the headline text from the text object
// 1. Try and get the text
// 2. If there is no text set text to ""
function getText(texts) {
  let text;
  try {
    text = texts.text;
  } catch {
    text = "";
  }
  return text;
}

// Returns the position the ad text is pinned too
// 1. Try and get the pinned position of the text
// 2. If there is no pin, set pin to "-"
// 3. If there is no text, set pin to ""
// 4. Strip HEADLINE_ and DESCRIPTION_ from text
function getPin(text) {
  let pin;
  try {
    pin = text.pinning;
    if (pin == null) {
      pin = "-";
    } else {
      if (pin.includes("HEADLINE_")) {
        pin = pin.replace("HEADLINE_", "");
      } else if (pin.includes("DESCRIPTION_")) {
        pin = pin.replace("DESCRIPTION_", "");
      }
    }
  } catch {
    pin = "";
  }
  return pin;
}

// Returns any labels attached to the ad as a single string
// 1. Loops through all labels in ad object
// 2. Adds them to an array
// 3. Returns as a string
function getLabels(ad) {
  const labels = [];
  const labelIterator = ad.labels()
    .get();
  while (labelIterator.hasNext()) {
    let labelValue = labelIterator.next();
    labels.push(labelValue.getName());
  }
  return labels.toString();
}
